
//--- nameteach.dic ---

OnTeachName // from bootend.dic
{
	if reference0 == "TEACHNAME" //ignore this
		{
			"\0\s[0]Choose a new name.\![open,inputbox,OnNameTeach,-1]\e"
		}
	else
		{

		}
}


OnNameTeach
{
	tempname = reference0 //this stores the name value from reference0 in tempname
	reference0 = TOLOWER(reference0) //changes it to lowercase
	reference0 = REPLACE(reference0," ","") //removes spaces
	reference0 = REPLACE(reference0,".","") //removes periods
	reference0 = REPLACE(reference0,"-","") //removes dashes

// I mght add more names here, like 'Fluff' to enter debug mode?

	if reference0 == "protagonist"
	{
		"\0\s[0]No.\w8\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "friend"
	{
		"\0\s[0]No.\w8\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == ""
	{		
		"\0\s[0]You didn't put in anything...\w8\![open,inputbox,OnNameTeach,-1]"
	}
	else
	{
		if firstboot == 0
		{
			TitleInput
		}
		else
		{
			"\0\s[0]Got it. And what are your pronouns?\n\n[half]/
			\w5\_q\![*]\q[He/Him/His,choicefirsthehim]\n/
			\![*]\q[She/Her/Hers,choicefirstsheher]\n/
			\![*]\q[They/Them/Their,choicefirsttheythem]\e"
		}
	}
}


Select.choicefirsthehim
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	hesshes = "he's"
	--
	TitleInput
}

Select.choicefirstsheher
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	hesshes = "she's"
	--
	TitleInput
}

Select.choicefirsttheythem
{
	presuffix = "genderless"
	himher = "them"
	heshe = "they"
	hisher = "their"
	hesshes = "they're"
	--
	TitleInput
}


TitleInput
{	
		"\0\s[0]...What is it?"
		--
		"\n\n[half]/
		\![*]\q[I want a title!,titlegimme]\n/
		\![*]\q[Nothing really.,titlenone]\e"

	//"\1\s[10]Now that the pronouns are set, we will ask for the user's name. \w8\0\s[0]What is your name, user? \![open,inputbox,OnNameTeach,-1]\e"
}


Select.titlegimme
	{
		"\0\s[0]Which one then?"
		--
		if presuffix == "masculine" //this value was defined in bootend.dic and menu.dic when the user chose their pronouns. Thus, if someone chose he/him pronouns, they would be able to choose Mr. or Master.
		{
		"\n\n[half]/
		\![*]\q[Mr.,titlemr]\n/
		\![*]\q[Sir,titlesir]\n/
		\![*]\q[-kun,titlekun]\n/
		\![*]\q[-chan,titlechan]\n"
		}
		elseif presuffix == "feminine" //Likewise, if someone chose she/her pronouns, they could choose Ms. or Lady.
		{
		"\n\n[half]/
		\![*]\q[Ms.,titlems]\n/
		\![*]\q[Lady,titlelady]\n/
		\![*]\q[-kun,titlekun]\n/
		\![*]\q[-chan,titlechan]\n"
		}
		elseif presuffix == "genderless"
		{
		"\n\n[half]/
		\![*]\q[Mx.,titlemx]\n/
		\![*]\q[Dear,titledear]\n/
		\![*]\q[-kun,titlekun]\n/
		\![*]\q[-chan,titlechan]\n"
		}
		-- //the titles after this are gender neutral and will appear for all users. If you want to remove the masculine and feminine titles entirely, just delete from the curly bracket one line up to the double dashes above "if presuffix == "masculine". That should leave only the neutral titles. Make sure to leave a set of double dashes above the neutral titles though. You can also just put the feminine and masculine titles in here too if you want all titles to be available to all users at all times.
		"\n[half]/
		\![*]\q[...Nevermind,titlenone]\e"
		//Note that the final line here ends with \e instead of \n/, since it is the final option. Make sure your final option (and ONLY your final option) always ends with \e. More on that in the box below.
	}


Select.titlenone
{
		username = tempname
		NameDone
}

Select.titlemr
{
		username = "Mr. " + tempname
		NameDone
}

Select.titlesir
{
		username = "Sir " + tempname
		NameDone
}
		
Select.titlems
{
		username = "Ms. " + tempname
		NameDone
}

Select.titlelady
{
		username = "Lady " + tempname
		NameDone
}

Select.titlemx
{
		username = "Mx. " + tempname
		NameDone
}

Select.titledear
{
		username = "Dear " + tempname
		NameDone
}

Select.titlekun
{
		username = tempname + "-kun"
		NameDone
}

Select.titlechan
{
		username = tempname + "-chan"
		NameDone
}

//--NameDone
//This is the final bit of dialogue your ghosts will have when the user changes their name. There is a special section here for when the user first boots the ghost.

NameDone
{
	if firstboot == 1 //this checks for the flag that was set during the firstboot sequence
	{
		firstboot = 0 //this turns the flag off
		
		//This dialogue will display the first time the user puts in their name. You might want to add some closing thoughts to the introduction your ghost had in OnFirstBoot, or directions about how to use the ghost, or something like that. It's up to you!
		"\![leave,passivemode]Then you're %(username)."
	}
	else
	{
		"\0\s[0]You're %(username).\e"
	}	
}